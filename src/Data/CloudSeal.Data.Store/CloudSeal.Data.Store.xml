<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CloudSeal.Data.Store</name>
    </assembly>
    <members>
        <member name="T:CloudSeal.Data.Store.EntityView`2">
            <summary>
                抽象实体视图接口
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">键类型</typeparam>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.#ctor(Microsoft.EntityFrameworkCore.DbContext,CloudSeal.Data.Core.ICacheProxy,Microsoft.Extensions.Logging.ILogger)">
            <summary>
                无键实体视图构造
            </summary>
            <param name="context">数据库上下文</param>
            <param name="cacheProxy">缓存代理</param>
            <param name="logger">日志依赖</param>
        </member>
        <member name="P:CloudSeal.Data.Store.EntityView`2.CacheProxy">
            <summary>
                缓存代理
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.EntityKey(`1)">
            <summary>
                实体键生成委托
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.EntityKey(`0)">
            <summary>
                实体键生成委托
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.KeyMatchQuery(`1)">
            <summary>
                键适配查询
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.KeyMatchQuery(System.Collections.Generic.IEnumerable{`1})">
            <summary>
                键适配查询
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.GetId(`0)">
            <summary>
                获取指定实体Id
            </summary>
            <param name="entity">实体</param>
            <returns>Id</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
                获取指定实体Id
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消异步操作的信号</param>
            <returns>Id</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.IsDeleted(`0)">
            <summary>
                是否被删除
            </summary>
            <param name="entity">实体</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.IsDeleted(`1)">
            <summary>
                是否被删除
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.IsDeletedAsync(`0,System.Threading.CancellationToken)">
            <summary>
                是否被删除
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.IsDeletedAsync(`1,System.Threading.CancellationToken)">
            <summary>
                是否被删除
            </summary>
            <param name="key">键</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindEntity(`1)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindEntities(System.Collections.Generic.IEnumerable{`1})">
            <summary>
                根据Id查找实体
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindEntityAsync(`1,System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="id"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindEntitiesAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.Exists(`1)">
            <summary>
                判断实体是否存在
            </summary>
            <param name="key">实体键</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.ExistsAsync(`1,System.Threading.CancellationToken)">
            <summary>
                判断实体是否存在
            </summary>
            <param name="key">实体键</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.CacheKey(`0)">
            <summary>
                生成键
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.CacheKey(`1)">
            <summary>
                生成键
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindById(`1)">
            <summary>
                根据Id查询实体
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindByIds(System.Collections.Generic.IEnumerable{`1})">
            <summary>
                根据Id查询实体
            </summary>
            <param name="ids">id表</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindByIdAsync(`1,System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="id"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.EntityView`2.FindByIdsAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="T:CloudSeal.Data.Store.KeyLessEntityView`1">
            <summary>
                抽象无键实体视图实现
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.Extensions.Logging.ILogger)">
            <summary>
                无键实体视图构造
            </summary>
            <param name="context">数据库上下文</param>
            <param name="logger">日志依赖</param>
        </member>
        <member name="F:CloudSeal.Data.Store.KeyLessEntityView`1._disposed">
            <summary>
                已释放标识
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.ThrowIfDisposed">
            <summary>
                Throws if this class has been disposed.
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.Context">
            <summary>
                数据访问上下文
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.Logger">
            <summary>
                日志依赖
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.EntitySet">
            <summary>
                Entity集合访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.TrackingQuery">
            <summary>
                Entity有追踪访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.EntityQuery">
            <summary>
                Entity无追踪访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.KeyLessEntityView`1.EntityName">
            <summary>
                实体标识
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.EntityKey(`0)">
            <summary>
                实体键生成委托
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.OnActionExecuting``1(``0,System.String)">
            <summary>
                方法执行前
            </summary>
            <typeparam name="TValue">值类型</typeparam>
            <param name="value">值</param>
            <param name="name">值名称</param>
        </member>
        <member name="M:CloudSeal.Data.Store.KeyLessEntityView`1.OnAsyncActionExecuting``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
                异步方法执行前
            </summary>
            <typeparam name="TValue">值类型</typeparam>
            <param name="value">值</param>
            <param name="name">值名称</param>
            <param name="cancellationToken">操作取消信号</param>
        </member>
        <member name="T:CloudSeal.Data.Store.IEntityView`2">
            <summary>
                实体视图接口
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">键类型</typeparam>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.KeyMatchQuery(`1)">
            <summary>
                键适配查询
            </summary>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.KeyMatchQuery(System.Collections.Generic.IEnumerable{`1})">
            <summary>
                键适配查询
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.GetId(`0)">
            <summary>
                获取指定实体Id
            </summary>
            <param name="entity">实体</param>
            <returns>Id</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
                获取指定实体Id
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消异步操作的信号</param>
            <returns>Id</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.IsDeleted(`0)">
            <summary>
                是否被删除
            </summary>
            <param name="entity">实体</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.IsDeleted(`1)">
            <summary>
                是否被删除
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.IsDeletedAsync(`0,System.Threading.CancellationToken)">
            <summary>
                是否被删除
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.IsDeletedAsync(`1,System.Threading.CancellationToken)">
            <summary>
                是否被删除
            </summary>
            <param name="key">键</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.FindEntity(`1)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.FindEntities(System.Collections.Generic.IEnumerable{`1})">
            <summary>
                根据Id查找实体
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.FindEntityAsync(`1,System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="id"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.FindEntitiesAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
                根据Id查找实体
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken">取消信号</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.Exists(`1)">
            <summary>
                判断实体是否存在
            </summary>
            <param name="id">实体键</param>
            <returns></returns>
        </member>
        <member name="M:CloudSeal.Data.Store.IEntityView`2.ExistsAsync(`1,System.Threading.CancellationToken)">
            <summary>
                判断实体是否存在
            </summary>
            <param name="id">实体键</param>
            <param name="cancellationToken">操作取消信号</param>
            <returns></returns>
        </member>
        <member name="T:CloudSeal.Data.Store.IKeyLessEntityView`1">
            <summary>
                无键实体视图接口
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="P:CloudSeal.Data.Store.IKeyLessEntityView`1.EntitySet">
            <summary>
                Entity集合访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.IKeyLessEntityView`1.TrackingQuery">
            <summary>
                Entity有追踪访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.IKeyLessEntityView`1.EntityQuery">
            <summary>
                Entity无追踪访问器
            </summary>
        </member>
        <member name="P:CloudSeal.Data.Store.IKeyLessEntityView`1.EntityName">
            <summary>
                实体标识
            </summary>
        </member>
    </members>
</doc>
